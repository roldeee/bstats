/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "base/stats/Component-preload",
	"modules": {
		"base/stats/controller/App.controller.js": "sap.ui.define([\n\t\t\"base/stats/controller/BaseController\",\n\t\t\"sap/ui/model/json/JSONModel\"\n\t], function (BaseController, JSONModel) {\n\t\t\"use strict\";\n\n\t\treturn BaseController.extend(\"base.stats.controller.App\", {\n\n\t\t\tonInit : function () {\n\t\t\t\tvar oViewModel,\n\t\t\t\t\tfnSetAppNotBusy,\n\t\t\t\t\toListSelector = this.getOwnerComponent().oListSelector,\n\t\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\n\n\t\t\t\toViewModel = new JSONModel({\n\t\t\t\t\tbusy : true,\n\t\t\t\t\tdelay : 0\n\t\t\t\t});\n\t\t\t\tthis.setModel(oViewModel, \"appView\");\n\n\t\t\t\tfnSetAppNotBusy = function() {\n\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t\t};\n\n\t\t\t\tthis.getOwnerComponent().getModel().metadataLoaded()\n\t\t\t\t\t\t.then(fnSetAppNotBusy);\n\n\t\t\t\t// Makes sure that master view is hidden in split app\n\t\t\t\t// after a new list entry has been selected.\n\t\t\t\toListSelector.attachListSelectionChange(function () {\n\t\t\t\t\tthis.byId(\"idAppControl\").hideMaster();\n\t\t\t\t}, this);\n\n\t\t\t\t// apply content density mode to root view\n\t\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"base/stats/controller/BaseController.js": "/*global history */\nsap.ui.define([\n\t\t\"sap/ui/core/mvc/Controller\",\n\t\t\"sap/ui/core/routing/History\"\n\t], function (Controller, History) {\n\t\t\"use strict\";\n\n\t\treturn Controller.extend(\"base.stats.controller.BaseController\", {\n\t\t\t/**\n\t\t\t * Convenience method for accessing the router in every controller of the application.\n\t\t\t * @public\n\t\t\t * @returns {sap.ui.core.routing.Router} the router for this component\n\t\t\t */\n\t\t\tgetRouter : function () {\n\t\t\t\treturn this.getOwnerComponent().getRouter();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Convenience method for getting the view model by name in every controller of the application.\n\t\t\t * @public\n\t\t\t * @param {string} sName the model name\n\t\t\t * @returns {sap.ui.model.Model} the model instance\n\t\t\t */\n\t\t\tgetModel : function (sName) {\n\t\t\t\treturn this.getView().getModel(sName);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Convenience method for setting the view model in every controller of the application.\n\t\t\t * @public\n\t\t\t * @param {sap.ui.model.Model} oModel the model instance\n\t\t\t * @param {string} sName the model name\n\t\t\t * @returns {sap.ui.mvc.View} the view instance\n\t\t\t */\n\t\t\tsetModel : function (oModel, sName) {\n\t\t\t\treturn this.getView().setModel(oModel, sName);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Convenience method for getting the resource bundle.\n\t\t\t * @public\n\t\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\n\t\t\t */\n\t\t\tgetResourceBundle : function () {\n\t\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\n\t\t\t},\n\t\t\t\n\t\t\tplayerListFactory : function (sId, oContext) {\n\t\t\t\tvar oPlayer = oContext.getObject(oContext.getPath()),\n\t\t\t\t\tsFirst = oPlayer.fname,\n\t\t\t\t\tsLast = oPlayer.lname,\n\t\t\t\t\titem  =  new sap.m.ObjectListItem();\n\t\t\t\treturn item.setTitle(sFirst + \" \" + sLast);\n\t\t\t},\n\t\t\t\n\t\t\tgameListFactory : function (sId, oContext){\n\t\t\t\tvar oGame = oContext.getObject(oContext.getPath()),\n\t\t\t\t\tsHome = oContext.getObject(\"/\" + oGame.Home.__ref).teamalias,\n\t\t\t\t\tsAway = oContext.getObject(\"/\" + oGame.Away.__ref).teamalias,\n\t\t\t\t\tsNum = oGame.gameno,\n\t\t\t\t\titem  =  new sap.m.ObjectListItem();\n\t\t\t\treturn item.setTitle(\"Game \" + sNum).addAttribute(new sap.m.ObjectAttribute(sId).setText(sAway + \" vs \" + sHome));\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"base/stats/controller/Detail.controller.js": "/*global location */\nsap.ui.define([\n\t\t\"base/stats/controller/BaseController\",\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"base/stats/model/formatter\",\n\t\t\"sap/ui/core/format/NumberFormat\"\n\t], function (BaseController, JSONModel, formatter, NumberFormat) {\n\t\t\"use strict\";\n\n\t\treturn BaseController.extend(\"base.stats.controller.Detail\", {\n\n\t\t\tformatter: formatter,\n\n\t\t\t/* =========================================================== */\n\t\t\t/* lifecycle methods                                           */\n\t\t\t/* =========================================================== */\n\n\t\t\tonInit : function () {\n\t\t\t\t// Model used to manipulate control states. The chosen values make sure,\n\t\t\t\t// detail page is busy indication immediately so there is no break in\n\t\t\t\t// between the busy indication for loading the view's meta data\n\t\t\t\tvar oViewModel = new JSONModel({\n\t\t\t\t\tbusy : false,\n\t\t\t\t\tdelay : 0,\n\t\t\t\t\tlineItemListTitle : this.getResourceBundle().getText(\"detailLineItemTableHeading\")\n\t\t\t\t});\n\n\t\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\n\n\t\t\t\tthis.setModel(oViewModel, \"detailView\");\n\n\t\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(this._onMetadataLoaded.bind(this));\n\t\t\t\t\n\t\t\t\tthis.statFormat1 = sap.ui.core.format.NumberFormat.getFloatInstance({\n\t\t\t\t\tmaxIntegerDigits: 0,\n\t\t\t\t\tmaxFractionDigits: 3,\n\t\t\t\t\tminFractionDigits: 3\n\t\t\t\t});\n\t\t\t\tthis.statFormat2 = sap.ui.core.format.NumberFormat.getFloatInstance({\n\t\t\t\t\tmaxIntegerDigits: 1,\n\t\t\t\t\tmaxFractionDigits: 3,\n\t\t\t\t\tminFractionDigits: 3\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\n\t\t\t/* =========================================================== */\n\t\t\t/* event handlers                                              */\n\t\t\t/* =========================================================== */\n\n\t\t\t/**\n\t\t\t * Event handler when the share by E-Mail button has been clicked\n\t\t\t * @public\n\t\t\t */\n\t\t\tonShareEmailPress : function () {\n\t\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\n\t\t\t\tsap.m.URLHelper.triggerEmail(\n\t\t\t\t\tnull,\n\t\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\n\t\t\t\t\toViewModel.getProperty(\"/shareSendEmailMessage\")\n\t\t\t\t);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Updates the item count within the line item table's header\n\t\t\t * @param {object} oEvent an event containing the total number of items in the list\n\t\t\t * @private\n\t\t\t */\n\t\t\tonListUpdateFinished : function (oEvent) {\n\t\t\t\tvar sTitle,\n\t\t\t\t\tiTotalItems = oEvent.getParameter(\"total\"),\n\t\t\t\t\toViewModel = this.getModel(\"detailView\"),\n\t\t\t\t\toTable = this.byId(\"lineItemsList\"),\n\t\t\t\t\taItems = oTable.getItems(),\n\t\t\t\t\taTotals = new Array(13).fill(0),\n\t\t\t\t\ttotalRow = new sap.m.ColumnListItem();\n\n\t\t\t\t// only update the counter if the length is final\n\t\t\t\tif (oTable.getBinding(\"items\").isLengthFinal()) {\n\t\t\t\t\tif (iTotalItems) {\n\t\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeadingCount\", [iTotalItems]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//Display 'Line Items' instead of 'Line items (0)'\n\t\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeading\");\n\t\t\t\t\t}\n\t\t\t\t\toViewModel.setProperty(\"/lineItemListTitle\", sTitle);\n\t\t\t\t}\n\t\t\t\tfor(var i = 0; i < aItems.length; i++){\n\t\t\t\t\tvar item = aItems[i],\n\t\t\t\t\t\tcells = item.getCells();\n\t\t\t\t\t\tfor( var j = 1; j < aTotals.length + 1 ; j++){\n\t\t\t\t\t\t\tvar cell = cells[j];\n\t\t\t\t\t\t\taTotals[j-1] += parseInt(cell.getNumber());\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttotalRow.addCell(new sap.m.ObjectIdentifier().setText(\"Total\"));\n\t\t\t\tfor(var i = 0 ; i < aTotals.length; i++){\n\t\t\t\t\ttotalRow.addCell(new sap.m.ObjectNumber().setNumber(aTotals[i]));\n\t\t\t\t}\n\t\t\t\ttotalRow.addCell(new sap.m.ObjectNumber().setNumber(this._battingAverage(aTotals)));\n\t\t\t\ttotalRow.addCell(new sap.m.ObjectNumber().setNumber(this._onBasePercentage(aTotals)));\n\t\t\t\ttotalRow.addCell(new sap.m.ObjectNumber().setNumber(this._slugging(aTotals)));\n\t\t\t\ttotalRow.addCell(new sap.m.ObjectNumber().setNumber(this._ops(aTotals)));\n\t\t\t\toTable.addItem(totalRow);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler  for navigating back.\n\t\t\t * It there is a history entry we go one step back in the browser history\n\t\t\t * If not, it will replace the current entry of the browser history with the master route.\n\t\t\t * @public\n\t\t\t */\n\t\t\tonNavBack : function() {\n\t\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash();\n\n\t\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\t\thistory.go(-1);\n\t\t\t\t} else {\n\t\t\t\t\tthis.getRouter().navTo(\"master\", {}, true);\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tonLeader : function() {\n\t\t\t\tthis.getRouter().navTo(\"leader\", {}, true);\t\n\t\t\t},\n\t\t\t\n\t\t\tonAdd : function () {\n\t\t\t\tthis.getRouter().navTo(\"add\", {}, true);\t\n\t\t\t},\n\t\t\t\n\t\t\tonListItemPress : function(oEvent) {\n\t\t\t\tvar item = oEvent.getParameters().listItem,\n\t\t\t\t\tcontext = item.getBindingContext(),\n\t\t\t\t\tsKey = \"PID\";\n\t\t\t\tthis.getRouter().navTo(\"player\", {objectId : context.getProperty(sKey)}, true);\n\t\t\t\t/*if (this.byId(\"playerName\").getVisible()){\n\t\t\t\t\tsKey = \"GID\";\n\t\t\t\t\tsType = \"Games\";\n\t\t\t\t}\t\n\t\t\t\tvar sValue = context.getProperty(sKey);\t\n\t\t\t\tvar sObjectPath = \"/\" + sType + \"('\" + sValue + \"')\";\n\t\t\t\tthis.byId(\"playerName\").setVisible(!this.byId(\"playerName\").getVisible());\n\t\t\t\tthis.byId(\"objectHeader\").setVisible(!this.byId(\"objectHeader\").getVisible());\n\t\t\t\tthis.byId(\"playerCol\").setVisible(!this.byId(\"playerCol\").getVisible());\n\t\t\t\tthis.byId(\"gameCol\").setVisible(!this.byId(\"gameCol\").getVisible());\n\t\t\t\tvar oList = sap.ui.getCore().byId(\"__component0---master--list\"),\n\t\t\t\t\toBinding = {\n\t\t\t\t\t\tpath : \"/Players\",\n\t\t\t\t\t\tfactory : this.playerListFactory\n\t\t\t\t\t};\n\t\t\t\toList.bindItems(oBinding);\n\t\t\t\tthis._bindView(sObjectPath);*/\n\t\t\t},\n\n\t\t\t/* =========================================================== */\n\t\t\t/* begin: internal methods                                     */\n\t\t\t/* =========================================================== */\n\n\n\t\t\t_battingAverage : function (aStats) {\n\t\t\t\treturn this.statFormat1.format(aStats[5] / aStats[0]);\t\n\t\t\t},\n\t\t\t\n\t\t\t_onBasePercentage: function (aStats) {\n\t\t\t\treturn this.statFormat1.format((aStats[5] + aStats[8] + aStats[10]) / (aStats[0] + aStats[8] + aStats[10] + aStats[11]));\n\t\t\t},\n\t\t\t\n\t\t\t_slugging : function (aStats) {\n\t\t\t\treturn this.statFormat2.format((aStats[1] + aStats[2] * 2 + aStats[3] * 3 + aStats[4] * 4) / aStats[0]);\n\t\t\t},\n\t\t\t\n\t\t\t_ops : function (aStats) {\n\t\t\t\tvar a = ((aStats[1] + aStats[2] * 2 + aStats[3] * 3 + aStats[4] * 4) / aStats[0]) + ((aStats[5] + aStats[8] + aStats[10]) / (aStats[0] + aStats[8] + aStats[10] + aStats[11]));\n\t\t\t\treturn this.statFormat2.format(a);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Binds the view to the object path and expands the aggregated line items.\n\t\t\t * @function\n\t\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\n\t\t\t * @private\n\t\t\t */\n\t\t\t_onObjectMatched : function (oEvent) {\n\t\t\t\tthis.byId(\"lineItemsList\").destroyItems();\n\t\t\t\tvar sObjectId =  oEvent.getParameter(\"arguments\").objectId;\n\t\t\t\tthis.getModel().metadataLoaded().then( function() {\n\t\t\t\t\tvar sObjectPath = this.getModel().createKey(\"Games\", {\n\t\t\t\t\t\tGAMEID :  sObjectId\n\t\t\t\t\t});\n\t\t\t\t\tthis._bindView(\"/\" + sObjectPath);\n\t\t\t\t}.bind(this));\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Binds the view to the object path. Makes sure that detail view displays\n\t\t\t * a busy indicator while data for the corresponding element binding is loaded.\n\t\t\t * @function\n\t\t\t * @param {string} sObjectPath path to the object to be bound to the view.\n\t\t\t * @private\n\t\t\t */\n\t\t\t_bindView : function (sObjectPath) {\n\t\t\t\t// Set busy indicator during view binding\n\t\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\n\t\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\tthis.getView().bindElement({\n\t\t\t\t\tpath : sObjectPath,\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tchange : this._onBindingChange.bind(this),\n\t\t\t\t\t\tdataRequested : function () {\n\t\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdataReceived: function () {\n\t\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t_onBindingChange : function () {\n\t\t\t\tvar oView = this.getView(),\n\t\t\t\t\toElementBinding = oView.getElementBinding();\n\n\t\t\t\t// No data for the binding\n\t\t\t\tif (!oElementBinding.getBoundContext()) {\n\t\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\n\t\t\t\t\t// if object could not be found, the selection in the master list\n\t\t\t\t\t// does not make sense anymore.\n\t\t\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar sPath = oElementBinding.getPath(),\n\t\t\t\t\toResourceBundle = this.getResourceBundle(),\n\t\t\t\t\toObject = oView.getModel().getObject(sPath),\n\t\t\t\t\tsObjectId = oObject.GAMEID,\n\t\t\t\t\tsObjectName = oObject.GAMEID,\n\t\t\t\t\toViewModel = this.getModel(\"detailView\");\n\n\t\t\t\tthis.getOwnerComponent().oListSelector.selectAListItem(sPath);\n\n\t\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\",\n\t\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\n\t\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\",\n\t\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectMessage\", [sObjectName, sObjectId, location.href]));\n\t\t\t},\n\n\t\t\t_onMetadataLoaded : function () {\n\t\t\t\t// Store original busy indicator delay for the detail view\n\t\t\t\tvar iOriginalViewBusyDelay = this.getView().getBusyIndicatorDelay(),\n\t\t\t\t\toViewModel = this.getModel(\"detailView\"),\n\t\t\t\t\toLineItemTable = this.byId(\"lineItemsList\"),\n\t\t\t\t\tiOriginalLineItemTableBusyDelay = oLineItemTable.getBusyIndicatorDelay();\n\n\t\t\t\t// Make sure busy indicator is displayed immediately when\n\t\t\t\t// detail view is displayed for the first time\n\t\t\t\toViewModel.setProperty(\"/delay\", 0);\n\t\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", 0);\n\n\t\t\t\toLineItemTable.attachEventOnce(\"updateFinished\", function() {\n\t\t\t\t\t// Restore original busy indicator delay for line item table\n\t\t\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", iOriginalLineItemTableBusyDelay);\n\t\t\t\t});\n\n\t\t\t\t// Binding the view will set it to not busy - so the view is always busy if it is not bound\n\t\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t\t// Restore original busy indicator delay for the detail view\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalViewBusyDelay);\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"base/stats/controller/ErrorHandler.js": "sap.ui.define([\n\t\t\"sap/ui/base/Object\",\n\t\t\"sap/m/MessageBox\"\n\t], function (UI5Object, MessageBox) {\n\t\t\"use strict\";\n\n\t\treturn UI5Object.extend(\"base.stats.controller.ErrorHandler\", {\n\n\t\t\t/**\n\t\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\n\t\t\t * @class\n\t\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\n\t\t\t * @public\n\t\t\t * @alias base.stats.controller.ErrorHandler\n\t\t\t */\n\t\t\tconstructor : function (oComponent) {\n\t\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\n\t\t\t\tthis._oComponent = oComponent;\n\t\t\t\tthis._oModel = oComponent.getModel();\n\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\n\n\t\t\t\tthis._oModel.attachMetadataFailed(function (oEvent) {\n\t\t\t\t\tvar oParams = oEvent.getParameters();\n\n\t\t\t\t\tthis._showMetadataError(oParams.response);\n\t\t\t\t}, this);\n\n\t\t\t\tthis._oModel.attachRequestFailed(function (oEvent) {\n\t\t\t\t\tvar oParams = oEvent.getParameters();\n\n\t\t\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\n\t\t\t\t\t// We already cover this case with a notFound target so we skip it here.\n\t\t\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\n\t\t\t\t\tif (oParams.response.statusCode !== \"404\" || (oParams.response.statusCode === 404 && oParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {\n\t\t\t\t\t\tthis._showServiceError(oParams.response);\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Shows a {@link sap.m.MessageBox} when the metadata call has failed.\n\t\t\t * The user can try to refresh the metadata.\n\t\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t\t * @private\n\t\t\t */\n\t\t\t_showMetadataError : function (sDetails) {\n\t\t\t\tMessageBox.error(\n\t\t\t\t\tthis._sErrorText,\n\t\t\t\t\t{\n\t\t\t\t\t\tid : \"metadataErrorMessageBox\",\n\t\t\t\t\t\tdetails : sDetails,\n\t\t\t\t\t\tstyleClass : this._oComponent.getContentDensityClass(),\n\t\t\t\t\t\tactions : [MessageBox.Action.RETRY, MessageBox.Action.CLOSE],\n\t\t\t\t\t\tonClose : function (sAction) {\n\t\t\t\t\t\t\tif (sAction === MessageBox.Action.RETRY) {\n\t\t\t\t\t\t\t\tthis._oModel.refreshMetadata();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\n\t\t\t * Only the first error message will be display.\n\t\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t\t * @private\n\t\t\t */\n\t\t\t_showServiceError : function (sDetails) {\n\t\t\t\tif (this._bMessageOpen) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._bMessageOpen = true;\n\t\t\t\tMessageBox.error(\n\t\t\t\t\tthis._sErrorText,\n\t\t\t\t\t{\n\t\t\t\t\t\tid : \"serviceErrorMessageBox\",\n\t\t\t\t\t\tdetails : sDetails,\n\t\t\t\t\t\tstyleClass : this._oComponent.getContentDensityClass(),\n\t\t\t\t\t\tactions : [MessageBox.Action.CLOSE],\n\t\t\t\t\t\tonClose : function () {\n\t\t\t\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"base/stats/controller/ListSelector.js": "sap.ui.define([\n\t\t\"sap/ui/base/Object\"\n\t], function (BaseObject) {\n\t\t\"use strict\";\n\n\t\treturn BaseObject.extend(\"base.stats.model.ListSelector\", {\n\n\t\t\t/**\n\t\t\t * Provides a convenience API for selecting list items. All the functions will wait until the initial load of the a List passed to the instance by the setBoundMasterList\n\t\t\t * function.\n\t\t\t * @class\n\t\t\t * @public\n\t\t\t * @alias base.stats.model.ListSelector\n\t\t\t */\n\n\t\t\tconstructor : function () {\n\t\t\t\tthis._oWhenListHasBeenSet = new Promise(function (fnResolveListHasBeenSet) {\n\t\t\t\t\tthis._fnResolveListHasBeenSet = fnResolveListHasBeenSet;\n\t\t\t\t}.bind(this));\n\t\t\t\t// This promise needs to be created in the constructor, since it is allowed to\n\t\t\t\t// invoke selectItem functions before calling setBoundMasterList\n\t\t\t\tthis.oWhenListLoadingIsDone = new Promise(function (fnResolve, fnReject) {\n\t\t\t\t\t// Used to wait until the setBound masterList function is invoked\n\t\t\t\t\tthis._oWhenListHasBeenSet\n\t\t\t\t\t\t.then(function (oList) {\n\t\t\t\t\t\t\toList.getBinding(\"items\").attachEventOnce(\"dataReceived\",\n\t\t\t\t\t\t\t\tfunction (oData) {\n\t\t\t\t\t\t\t\t\tif (!oData.getParameter(\"data\")) {\n\t\t\t\t\t\t\t\t\t\tfnReject({\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\n\t\t\t\t\t\t\t\t\t\t\terror : true\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvar oFirstListItem = oList.getItems()[0];\n\t\t\t\t\t\t\t\t\tif (oFirstListItem) {\n\t\t\t\t\t\t\t\t\t\t// Have to make sure that first list Item is selected\n\t\t\t\t\t\t\t\t\t\t// and a select event is triggered. Like that, the corresponding\n\t\t\t\t\t\t\t\t\t\t// detail page is loaded automatically\n\t\t\t\t\t\t\t\t\t\tfnResolve({\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\n\t\t\t\t\t\t\t\t\t\t\tfirstListitem : oFirstListItem\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// No items in the list\n\t\t\t\t\t\t\t\t\t\tfnReject({\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\n\t\t\t\t\t\t\t\t\t\t\terror : false\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t}.bind(this));\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * A bound list should be passed in here. Should be done, before the list has received its initial data from the server.\n\t\t\t * May only be invoked once per ListSelector instance.\n\t\t\t * @param {sap.m.List} oList The list all the select functions will be invoked on.\n\t\t\t * @public\n\t\t\t */\n\t\t\tsetBoundMasterList : function (oList) {\n\t\t\t\tthis._oList = oList;\n\t\t\t\tthis._fnResolveListHasBeenSet(oList);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Tries to select and scroll to a list item with a matching binding context. If there are no items matching the binding context or the ListMode is none,\n\t\t\t * no selection/scrolling will happen\n\t\t\t * @param {string} sBindingPath the binding path matching the binding path of a list item\n\t\t\t * @public\n\t\t\t */\n\t\t\tselectAListItem : function (sBindingPath) {\n\n\t\t\t\tthis.oWhenListLoadingIsDone.then(\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\tvar oList = this._oList,\n\t\t\t\t\t\t\toSelectedItem;\n\n\t\t\t\t\t\tif (oList.getMode() === \"None\") {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toSelectedItem = oList.getSelectedItem();\n\n\t\t\t\t\t\t// skip update if the current selection is already matching the object path\n\t\t\t\t\t\tif (oSelectedItem && oSelectedItem.getBindingContext().getPath() === sBindingPath) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toList.getItems().some(function (oItem) {\n\t\t\t\t\t\t\tif (oItem.getBindingContext() && oItem.getBindingContext().getPath() === sBindingPath) {\n\t\t\t\t\t\t\t\toList.setSelectedItem(oItem);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}.bind(this),\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\tjQuery.sap.log.warning(\"Could not select the list item with the path\" + sBindingPath + \" because the list encountered an error or had no items\");\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\n\n\t\t\t/* =========================================================== */\n\t\t\t/* Convenience Functions for List Selection Change Event       */\n\t\t\t/* =========================================================== */\n\n\t\t\t/**\n\t\t\t * Attaches a listener and listener function to the ListSelector's bound master list. By using\n\t\t\t * a promise, the listener is added, even if the list is not available when 'attachListSelectionChange'\n\t\t\t * is called.\n\t\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\n\t\t\t * @param {function} oListener the listener object\n\t\t\t * @return {base.stats.model.ListSelector} the list selector object for method chaining\n\t\t\t * @public\n\t\t\t */\n\t\t\tattachListSelectionChange : function (fnFunction, oListener) {\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\n\t\t\t\t\tthis._oList.attachSelectionChange(fnFunction, oListener);\n\t\t\t\t}.bind(this));\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Detaches a listener and listener function from the ListSelector's bound master list. By using\n\t\t\t * a promise, the listener is removed, even if the list is not available when 'detachListSelectionChange'\n\t\t\t * is called.\n\t\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\n\t\t\t * @param {function} oListener the listener object\n\t\t\t * @return {base.stats.model.ListSelector} the list selector object for method chaining\n\t\t\t * @public\n\t\t\t */\n\t\t\tdetachListSelectionChange : function (fnFunction, oListener) {\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\n\t\t\t\t\tthis._oList.detachSelectionChange(fnFunction, oListener);\n\t\t\t\t}.bind(this));\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Removes all selections from master list.\n\t\t\t * Does not trigger 'selectionChange' event on master list, though.\n\t\t\t * @public\n\t\t\t */\n\t\t\tclearMasterListSelection : function () {\n\t\t\t\t//use promise to make sure that 'this._oList' is available\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\n\t\t\t\t\tthis._oList.removeSelections(true);\n\t\t\t\t}.bind(this));\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"base/stats/controller/Master.controller.js": "/*global history */\nsap.ui.define([\n\t\t\"base/stats/controller/BaseController\",\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/ui/model/Filter\",\n\t\t\"sap/ui/model/FilterOperator\",\n\t\t\"sap/m/GroupHeaderListItem\",\n\t\t\"sap/ui/Device\",\n\t\t\"base/stats/model/formatter\"\n\t], function (BaseController, JSONModel, Filter, FilterOperator, GroupHeaderListItem, Device, formatter) {\n\t\t\"use strict\";\n\n\t\treturn BaseController.extend(\"base.stats.controller.Master\", {\n\n\t\t\tformatter: formatter,\n\n\t\t\t/* =========================================================== */\n\t\t\t/* lifecycle methods                                           */\n\t\t\t/* =========================================================== */\n\n\t\t\t/**\n\t\t\t * Called when the master list controller is instantiated. It sets up the event handling for the master/detail communication and other lifecycle tasks.\n\t\t\t * @public\n\t\t\t */\n\t\t\tonInit : function () {\n\t\t\t\t// Control state model\n\t\t\t\tvar oList = this.byId(\"list\"),\n\t\t\t\t\toViewModel = this._createViewModel(),\n\t\t\t\t\t// Put down master list's original value for busy indicator delay,\n\t\t\t\t\t// so it can be restored later on. Busy handling on the master list is\n\t\t\t\t\t// taken care of by the master list itself.\n\t\t\t\t\tiOriginalBusyDelay = oList.getBusyIndicatorDelay();\n\n\n\t\t\t\tthis._oList = oList;\n\t\t\t\t// keeps the filter and search state\n\t\t\t\tthis._oListFilterState = {\n\t\t\t\t\taFilter : [],\n\t\t\t\t\taSearch : []\n\t\t\t\t};\n\n\t\t\t\tthis.setModel(oViewModel, \"masterView\");\n\t\t\t\t// Make sure, busy indication is showing immediately so there is no\n\t\t\t\t// break after the busy indication for loading the view's meta data is\n\t\t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\n\t\t\t\toList.attachEventOnce(\"updateFinished\", function(){\n\t\t\t\t\t// Restore original busy indicator delay for the list\n\t\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t\t});\n\n\t\t\t\tthis.getView().addEventDelegate({\n\t\t\t\t\tonBeforeFirstShow: function () {\n\t\t\t\t\t\tthis.getOwnerComponent().oListSelector.setBoundMasterList(oList);\n\t\t\t\t\t}.bind(this)\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tthis.getRouter().getRoute(\"player\").attachPatternMatched(this._onPlayerMatched, this);\n\t\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onGameMatched, this);\n\t\t\t\tthis.getRouter().getRoute(\"master\").attachPatternMatched(this._onMasterMatched, this);\n\t\t\t\tthis.getRouter().attachBypassed(this.onBypassed, this);\n\t\t\t},\n\n\t\t\t/* =========================================================== */\n\t\t\t/* event handlers                                              */\n\t\t\t/* =========================================================== */\n\n\t\t\t/**\n\t\t\t * After list data is available, this handler method updates the\n\t\t\t * master list counter and hides the pull to refresh control, if\n\t\t\t * necessary.\n\t\t\t * @param {sap.ui.base.Event} oEvent the update finished event\n\t\t\t * @public\n\t\t\t */\n\t\t\tonUpdateFinished : function (oEvent) {\n\t\t\t\t// update the master list object counter after new data is loaded\n\t\t\t\tthis._updateListItemCount(oEvent.getParameter(\"total\"));\n\t\t\t\t// hide pull to refresh if necessary\n\t\t\t\tthis.byId(\"pullToRefresh\").hide();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for the master search field. Applies current\n\t\t\t * filter value and triggers a new search. If the search field's\n\t\t\t * 'refresh' button has been pressed, no new search is triggered\n\t\t\t * and the list binding is refresh instead.\n\t\t\t * @param {sap.ui.base.Event} oEvent the search event\n\t\t\t * @public\n\t\t\t */\n\t\t\tonSearch : function (oEvent) {\n\t\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\n\t\t\t\t\t// Search field's 'refresh' button has been pressed.\n\t\t\t\t\t// This is visible if you select any master list item.\n\t\t\t\t\t// In this case no new search is triggered, we only\n\t\t\t\t\t// refresh the list binding.\n\t\t\t\t\tthis.onRefresh();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar sQuery = oEvent.getParameter(\"query\");\n\n\t\t\t\tif (sQuery) {\n\t\t\t\t\tthis._oListFilterState.aSearch = [new Filter(\"GAMEID\", FilterOperator.Contains, sQuery)];\n\t\t\t\t} else {\n\t\t\t\t\tthis._oListFilterState.aSearch = [];\n\t\t\t\t}\n\t\t\t\tthis._applyFilterSearch();\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for refresh event. Keeps filter, sort\n\t\t\t * and group settings and refreshes the list binding.\n\t\t\t * @public\n\t\t\t */\n\t\t\tonRefresh : function () {\n\t\t\t\tthis._oList.getBinding(\"items\").refresh();\n\t\t\t},\n\n\n\n\t\t\t/**\n\t\t\t * Event handler for the list selection event\n\t\t\t * @param {sap.ui.base.Event} oEvent the list selectionChange event\n\t\t\t * @public\n\t\t\t */\n\t\t\tonSelectionChange : function (oEvent) {\n\t\t\t\t// get the list item, either from the listItem parameter or from the event's source itself (will depend on the device-dependent mode).\n\t\t\t\tthis._showDetail(oEvent.getParameter(\"listItem\") || oEvent.getSource());\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for the bypassed event, which is fired when no routing pattern matched.\n\t\t\t * If there was an object selected in the master list, that selection is removed.\n\t\t\t * @public\n\t\t\t */\n\t\t\tonBypassed : function () {\n\t\t\t\tthis._oList.removeSelections(true);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Used to create GroupHeaders with non-capitalized caption.\n\t\t\t * These headers are inserted into the master list to\n\t\t\t * group the master list's items.\n\t\t\t * @param {Object} oGroup group whose text is to be displayed\n\t\t\t * @public\n\t\t\t * @returns {sap.m.GroupHeaderListItem} group header with non-capitalized caption.\n\t\t\t */\n\t\t\tcreateGroupHeader : function (oGroup) {\n\t\t\t\treturn new GroupHeaderListItem({\n\t\t\t\t\ttitle : oGroup.text,\n\t\t\t\t\tupperCase : false\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for navigating back.\n\t\t\t * We navigate back in the browser historz\n\t\t\t * @public\n\t\t\t */\n\t\t\tonNavBack : function() {\n\t\t\t\thistory.go(-1);\n\t\t\t},\n\n\t\t\t/* =========================================================== */\n\t\t\t/* begin: internal methods                                     */\n\t\t\t/* =========================================================== */\n\n\n\t\t\t_createViewModel : function() {\n\t\t\t\treturn new JSONModel({\n\t\t\t\t\tisFilterBarVisible: false,\n\t\t\t\t\tfilterBarLabel: \"\",\n\t\t\t\t\tdelay: 0,\n\t\t\t\t\ttitle: this.getResourceBundle().getText(\"masterTitleCount\", [0]),\n\t\t\t\t\tnoDataText: this.getResourceBundle().getText(\"masterListNoDataText\"),\n\t\t\t\t\tsortBy: \"GAMEID\",\n\t\t\t\t\tgroupBy: \"None\"\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * If the master route was hit (empty hash) we have to set\n\t\t\t * the hash to to the first item in the list as soon as the\n\t\t\t * listLoading is done and the first item in the list is known\n\t\t\t * @private\n\t\t\t */\n\t\t\t_onMasterMatched :  function() {\n\t\t\t\tthis.getOwnerComponent().oListSelector.oWhenListLoadingIsDone.then(\n\t\t\t\t\tfunction (mParams) {\n\t\t\t\t\t\tif (mParams.list.getMode() === \"None\") {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar sObjectId = mParams.firstListitem.getBindingContext().getProperty(\"GAMEID\");\n\t\t\t\t\t\tthis.getRouter().navTo(\"object\", {objectId : sObjectId}, true);\n\t\t\t\t\t}.bind(this),\n\t\t\t\t\tfunction (mParams) {\n\t\t\t\t\t\tif (mParams.error) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\n\t\t\t\t\t}.bind(this)\n\t\t\t\t);\n\t\t\t},\n\t\t\t\n\t\t\t_onPlayerMatched : function() {\n\t\t\t\tvar oList = this.byId(\"list\"),\n\t\t\t\t\tsPath = \"/Players\",\n\t\t\t\t\toBinding = {\n\t\t\t\t\t\tpath : sPath,\n\t\t\t\t\t\tfactory : this.playerListFactory\n\t\t\t\t\t};\n\t\t\t\tif (oList.getBindingPath(\"items\") !== sPath){\n\t\t\t\t\tthis.byId(\"page\").setTitle(this.getResourceBundle().getText(\"masterPlayerCount\", [0]));\n\t\t\t\t\toList.removeSelections(true);\n\t\t\t\t\toList.bindItems(oBinding);\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t_onGameMatched : function() {\n\t\t\t\tvar oList = this.byId(\"list\"),\n\t\t\t\t\tsPath = \"/Games\",\n\t\t\t\t\toBinding = {\n\t\t\t\t\t\tpath : sPath,\n\t\t\t\t\t\tparameters : {\n\t\t\t\t\t\t\texpand: \"Home,Away,Season\"},\n\t\t\t\t\t\tfactory : this.gameListFactory\n\t\t\t\t\t};\n\t\t\t\tif (oList.getBindingPath(\"items\") !== sPath){\n\t\t\t\t\toList.removeSelections(true);\n\t\t\t\t\toList.bindItems(oBinding);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Shows the selected item on the detail page\n\t\t\t * On phones a additional history entry is created\n\t\t\t * @param {sap.m.ObjectListItem} oItem selected Item\n\t\t\t * @private\n\t\t\t */\n\t\t\t_showDetail : function (oItem) {\n\t\t\t\tvar bReplace = !Device.system.phone,\n\t\t\t\t\tsId = oItem.getBindingContext().getProperty(\"GAMEID\");\n\t\t\t\tif (sId){\n\t\t\t\t\tthis.getRouter().navTo(\"object\", {\n\t\t\t\t\t\tobjectId : sId\n\t\t\t\t\t}, bReplace);\n\t\t\t\t}else{\n\t\t\t\t\tthis.getRouter().navTo(\"player\", {\n\t\t\t\t\t\tobjectId : oItem.getBindingContext().getProperty(\"PLAYERID\")\n\t\t\t\t\t}, bReplace);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the item count on the master list header\n\t\t\t * @param {integer} iTotalItems the total number of items in the list\n\t\t\t * @private\n\t\t\t */\n\t\t\t_updateListItemCount : function (iTotalItems) {\n\t\t\t\tvar sTitle;\n\t\t\t\t// only update the counter if the length is final\n\t\t\t\tif (this._oList.getBinding(\"items\").isLengthFinal()) {\n\t\t\t\t\tvar ref = \"masterTitleCount\";\n\t\t\t\t\tif(this._oList.getBindingPath(\"items\") === \"/Players\"){\n\t\t\t\t\t\tref = \"masterPlayerCount\";\n\t\t\t\t\t}\n\t\t\t\t\tsTitle = this.getResourceBundle().getText(ref, [iTotalItems]);\n\t\t\t\t\tthis.getModel(\"masterView\").setProperty(\"/title\", sTitle);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Internal helper method to apply both filter and search state together on the list binding\n\t\t\t * @private\n\t\t\t */\n\t\t\t_applyFilterSearch : function () {\n\t\t\t\tvar aFilters = this._oListFilterState.aSearch.concat(this._oListFilterState.aFilter),\n\t\t\t\t\toViewModel = this.getModel(\"masterView\");\n\t\t\t\tthis._oList.getBinding(\"items\").filter(aFilters, \"Application\");\n\t\t\t\t// changes the noDataText of the list in case there are no filter results\n\t\t\t\tif (aFilters.length !== 0) {\n\t\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataWithFilterOrSearchText\"));\n\t\t\t\t} else if (this._oListFilterState.aSearch.length > 0) {\n\t\t\t\t\t// only reset the no data text to default when no new search was triggered\n\t\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataText\"));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Internal helper method to apply both group and sort state together on the list binding\n\t\t\t * @param {sap.ui.model.Sorter[]} aSorters an array of sorters\n\t\t\t * @private\n\t\t\t */\n\t\t\t_applyGroupSort : function (aSorters) {\n\t\t\t\tthis._oList.getBinding(\"items\").sort(aSorters);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Internal helper method that sets the filter bar visibility property and the label's caption to be shown\n\t\t\t * @param {string} sFilterBarText the selected filter value\n\t\t\t * @private\n\t\t\t */\n\t\t\t_updateFilterBar : function (sFilterBarText) {\n\t\t\t\tvar oViewModel = this.getModel(\"masterView\");\n\t\t\t\toViewModel.setProperty(\"/isFilterBarVisible\", (this._oListFilterState.aFilter.length > 0));\n\t\t\t\toViewModel.setProperty(\"/filterBarLabel\", this.getResourceBundle().getText(\"masterFilterBarText\", [sFilterBarText]));\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"base/stats/controller/Leader.controller.js": "/*global location */\nsap.ui.define([\n\t\t\"base/stats/controller/BaseController\",\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"base/stats/model/formatter\",\n\t\t\"sap/ui/core/format/NumberFormat\"\n\t], function (BaseController, JSONModel, formatter, NumberFormat) {\n\t\t\"use strict\";\n\n\t\treturn BaseController.extend(\"base.stats.controller.Leader\", {\n\n\t\t\tformatter: formatter,\n\n\t\t\t/* =========================================================== */\n\t\t\t/* lifecycle methods                                           */\n\t\t\t/* =========================================================== */\n\n\t\t\tonInit : function () {\n\t\t\t\t// Model used to manipulate control states. The chosen values make sure,\n\t\t\t\t// detail page is busy indication immediately so there is no break in\n\t\t\t\t// between the busy indication for loading the view's meta data\n\t\t\t\tvar oViewModel = new JSONModel({\n\t\t\t\t\tbusy : false,\n\t\t\t\t\tdelay : 0,\n\t\t\t\t\tlineItemListTitle : this.getResourceBundle().getText(\"detailLineItemTableHeading\")\n\t\t\t\t});\n\n\t\t\t\tthis.getRouter().getRoute(\"leader\").attachPatternMatched(this._onObjectMatched, this);\n\n\t\t\t\tthis.setModel(oViewModel, \"detailView\");\n\n\t\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(this._onMetadataLoaded.bind(this));\n\t\t\t\t\n\t\t\t},\n\t\t\t\n\n\t\t\t/* =========================================================== */\n\t\t\t/* event handlers                                              */\n\t\t\t/* =========================================================== */\n\n\t\t\t/**\n\t\t\t * Event handler when the share by E-Mail button has been clicked\n\t\t\t * @public\n\t\t\t */\n\t\t\tonShareEmailPress : function () {\n\t\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\n\t\t\t\tsap.m.URLHelper.triggerEmail(\n\t\t\t\t\tnull,\n\t\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\n\t\t\t\t\toViewModel.getProperty(\"/shareSendEmailMessage\")\n\t\t\t\t);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Updates the item count within the line item table's header\n\t\t\t * @param {object} oEvent an event containing the total number of items in the list\n\t\t\t * @private\n\t\t\t */\n\t\t\tonListUpdateFinished : function (oEvent) {\n\t\t\t\tvar oSeason = this.byId(\"selSeason\"),\n\t\t\t\t\toStat = this.byId(\"selStat\");\n\t\t\t\tif (oStat.getItems().length === 0){\n\t\t\t\t\tvar aProps = this.getModel().oMetadata.mEntityTypes.AllTime.property;\n\t\t\t\t\tfor (var i = 1; i < aProps.length; i++){\n\t\t\t\t\t\tvar oProp = aProps[i];\n\t\t\t\t\t\toStat.addItem(new sap.ui.core.Item().setText(oProp.name));\n\t\t\t\t\t}\n\t\t\t\t\tvar oItem = new sap.ui.core.Item().setText(\"All\");\n\t\t\t\t\toSeason.addItem(oItem);\n\t\t\t\t\toSeason.setSelectedItem(new sap.ui.core.Item().setText(\"All\").setKey(\"0\"));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler  for navigating back.\n\t\t\t * It there is a history entry we go one step back in the browser history\n\t\t\t * If not, it will replace the current entry of the browser history with the master route.\n\t\t\t * @public\n\t\t\t */\n\t\t\tonNavBack : function() {\n\t\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash();\n\n\t\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\t\thistory.go(-1);\n\t\t\t\t} else {\n\t\t\t\t\tthis.getRouter().navTo(\"master\", {}, true);\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tonListItemPress : function(oEvent) {\n\t\t\t\tvar item = oEvent.getParameters().listItem,\n\t\t\t\t\tcontext = item.getBindingContext(),\n\t\t\t\t\tsKey = \"GID\";\n\t\t\t\tthis.getRouter().navTo(\"object\", {objectId : context.getProperty(sKey)}, true);\n\t\t\t},\n\t\t\t\n\t\t\tonLeaderChange : function (oEvent) {\n\t\t\t\tvar oSelStat = this.byId(\"selStat\"),\n\t\t\t\t\toSelSeason = this.byId(\"selSeason\"),\n\t\t\t\t\tsStat = oSelStat.getSelectedItem().getText(),\n\t\t\t\t\tsSeason = oSelSeason.getSelectedItem().getKey(),\n\t\t\t\t\toLeaders = this.byId(\"leaders\"),\n\t\t\t\t\tfactory = function\t() {\n\t\t\t\t\t\treturn new sap.m.ObjectListItem().bindProperty(\"title\", {path : \"Player/fname\"}).bindProperty(\"number\", {path : sStat});\n\t\t\t\t\t}, tablePath,\n\t\t\t\t\taFilters = [];\n\t\t\t\tif (sSeason === \"0\"){\n\t\t\t\t\ttablePath = \"/AllTime\";\n\t\t\t\t}else {\n\t\t\t\t\ttablePath = \"/Leaders\";\n\t\t\t\t\taFilters.push(new sap.ui.model.Filter(\"SID\", \"EQ\", sSeason));\n\t\t\t\t}\n\t\t\t\tvar oBinding = {\n\t\t\t\t\t\tpath : tablePath,\n\t\t\t\t\t\tfactory : factory,\n\t\t\t\t\t\tparameters : {\n\t\t\t\t\t\t\texpand : \"Player\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsorter : new sap.ui.model.Sorter(sStat, true),\n\t\t\t\t\t\tfilter : aFilters\n\t\t\t\t\t};\n\t\t\t\toLeaders.bindItems(oBinding);\n\t\t\t},\n\n\t\t\t/* =========================================================== */\n\t\t\t/* begin: internal methods                                     */\n\t\t\t/* =========================================================== */\n\n\n\n\t\t\t/**\n\t\t\t * Binds the view to the object path and expands the aggregated line items.\n\t\t\t * @function\n\t\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\n\t\t\t * @private\n\t\t\t */\n\t\t\t_onObjectMatched : function (oEvent) {\n\t\t\t\t\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Binds the view to the object path. Makes sure that detail view displays\n\t\t\t * a busy indicator while data for the corresponding element binding is loaded.\n\t\t\t * @function\n\t\t\t * @param {string} sObjectPath path to the object to be bound to the view.\n\t\t\t * @private\n\t\t\t */\n\t\t\t_bindView : function (sObjectPath) {\n\t\t\t\t// Set busy indicator during view binding\n\t\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\t\t\t},\n\n\t\t\t_onBindingChange : function () {\n\t\t\t\tvar oView = this.getView(),\n\t\t\t\t\toElementBinding = oView.getElementBinding();\n\t\t\t},\n\n\t\t\t_onMetadataLoaded : function () {\n\t\t\t\t// Store original busy indicator delay for the detail view\n\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"base/stats/controller/Player.controller.js": "/*global location */\nsap.ui.define([\n\t\t\"base/stats/controller/BaseController\",\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"base/stats/model/formatter\",\n\t\t\"sap/ui/core/format/NumberFormat\"\n\t], function (BaseController, JSONModel, formatter, NumberFormat) {\n\t\t\"use strict\";\n\n\t\treturn BaseController.extend(\"base.stats.controller.Player\", {\n\n\t\t\tformatter: formatter,\n\n\t\t\t/* =========================================================== */\n\t\t\t/* lifecycle methods                                           */\n\t\t\t/* =========================================================== */\n\n\t\t\tonInit : function () {\n\t\t\t\t// Model used to manipulate control states. The chosen values make sure,\n\t\t\t\t// detail page is busy indication immediately so there is no break in\n\t\t\t\t// between the busy indication for loading the view's meta data\n\t\t\t\tvar oViewModel = new JSONModel({\n\t\t\t\t\tbusy : false,\n\t\t\t\t\tdelay : 0,\n\t\t\t\t\tlineItemListTitle : this.getResourceBundle().getText(\"detailLineItemTableHeading\")\n\t\t\t\t});\n\n\t\t\t\tthis.getRouter().getRoute(\"player\").attachPatternMatched(this._onObjectMatched, this);\n\n\t\t\t\tthis.setModel(oViewModel, \"detailView\");\n\n\t\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(this._onMetadataLoaded.bind(this));\n\t\t\t\t\n\t\t\t\tthis.statFormat1 = sap.ui.core.format.NumberFormat.getFloatInstance({\n\t\t\t\t\tmaxIntegerDigits: 0,\n\t\t\t\t\tmaxFractionDigits: 3,\n\t\t\t\t\tminFractionDigits: 3\n\t\t\t\t});\n\t\t\t\tthis.statFormat2 = sap.ui.core.format.NumberFormat.getFloatInstance({\n\t\t\t\t\tmaxIntegerDigits: 1,\n\t\t\t\t\tmaxFractionDigits: 3,\n\t\t\t\t\tminFractionDigits: 3\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\n\t\t\t/* =========================================================== */\n\t\t\t/* event handlers                                              */\n\t\t\t/* =========================================================== */\n\n\t\t\t/**\n\t\t\t * Event handler when the share by E-Mail button has been clicked\n\t\t\t * @public\n\t\t\t */\n\t\t\tonShareEmailPress : function () {\n\t\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\n\t\t\t\tsap.m.URLHelper.triggerEmail(\n\t\t\t\t\tnull,\n\t\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\n\t\t\t\t\toViewModel.getProperty(\"/shareSendEmailMessage\")\n\t\t\t\t);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Updates the item count within the line item table's header\n\t\t\t * @param {object} oEvent an event containing the total number of items in the list\n\t\t\t * @private\n\t\t\t */\n\t\t\tonListUpdateFinished : function (oEvent) {\n\t\t\t\tvar sTitle,\n\t\t\t\t\tiTotalItems = oEvent.getParameter(\"total\"),\n\t\t\t\t\toViewModel = this.getModel(\"detailView\"),\n\t\t\t\t\toTable = this.byId(\"lineItemsList\"),\n\t\t\t\t\taItems = oTable.getItems(),\n\t\t\t\t\taTotals = new Array(13).fill(0),\n\t\t\t\t\ttotalRow = new sap.m.ColumnListItem();\n\n\t\t\t\t// only update the counter if the length is final\n\t\t\t\tif (oTable.getBinding(\"items\").isLengthFinal()) {\n\t\t\t\t\tif (iTotalItems) {\n\t\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeadingCount\", [iTotalItems]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//Display 'Line Items' instead of 'Line items (0)'\n\t\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeading\");\n\t\t\t\t\t}\n\t\t\t\t\toViewModel.setProperty(\"/lineItemListTitle\", sTitle);\n\t\t\t\t}\n\t\t\t\tfor(var i = 0; i < aItems.length; i++){\n\t\t\t\t\tvar item = aItems[i],\n\t\t\t\t\t\tcells = item.getCells();\n\t\t\t\t\t\tfor( var j = 1; j < aTotals.length + 1 ; j++){\n\t\t\t\t\t\t\tvar cell = cells[j];\n\t\t\t\t\t\t\taTotals[j-1] += parseInt(cell.getNumber());\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttotalRow.addCell(new sap.m.ObjectIdentifier().setText(\"Total\"));\n\t\t\t\tfor(var i = 0 ; i < aTotals.length; i++){\n\t\t\t\t\ttotalRow.addCell(new sap.m.ObjectNumber().setNumber(aTotals[i]));\n\t\t\t\t}\n\t\t\t\ttotalRow.addCell(new sap.m.ObjectNumber().setNumber(this._battingAverage(aTotals)));\n\t\t\t\ttotalRow.addCell(new sap.m.ObjectNumber().setNumber(this._onBasePercentage(aTotals)));\n\t\t\t\ttotalRow.addCell(new sap.m.ObjectNumber().setNumber(this._slugging(aTotals)));\n\t\t\t\ttotalRow.addCell(new sap.m.ObjectNumber().setNumber(this._ops(aTotals)));\n\t\t\t\toTable.addItem(totalRow);\n\t\t\t\tif(!this.byId(\"select\").getItemByKey('0')){\n\t\t\t\t\tvar oSelect = this.byId(\"select\"),\n\t\t\t\t\t\toItem = new sap.ui.core.Item().setKey(0).setText(\"All\")\n\t\t\t\t\toSelect.addItem(oItem);\n\t\t\t\t\toSelect.setSelectedItem(oItem);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler  for navigating back.\n\t\t\t * It there is a history entry we go one step back in the browser history\n\t\t\t * If not, it will replace the current entry of the browser history with the master route.\n\t\t\t * @public\n\t\t\t */\n\t\t\tonNavBack : function() {\n\t\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash();\n\n\t\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\t\thistory.go(-1);\n\t\t\t\t} else {\n\t\t\t\t\tthis.getRouter().navTo(\"master\", {}, true);\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tonLeader : function() {\n\t\t\t\tthis.getRouter().navTo(\"leader\", {}, true);\t\n\t\t\t},\n\t\t\t\n\t\t\tonAdd : function () {\n\t\t\t\tthis.getRouter().navTo(\"add\", {}, true);\t\n\t\t\t},\n\t\t\t\n\t\t\tonListItemPress : function(oEvent) {\n\t\t\t\tvar item = oEvent.getParameters().listItem,\n\t\t\t\t\tcontext = item.getBindingContext(),\n\t\t\t\t\tsKey = \"GID\";\n\t\t\t\tthis.getRouter().navTo(\"object\", {objectId : context.getProperty(sKey)}, true);\n\t\t\t\t/*if (this.byId(\"playerName\").getVisible()){\n\t\t\t\t\tsKey = \"GID\";\n\t\t\t\t\tsType = \"Games\";\n\t\t\t\t}\t\n\t\t\t\tvar sValue = context.getProperty(sKey);\t\n\t\t\t\tvar sObjectPath = \"/\" + sType + \"('\" + sValue + \"')\";\n\t\t\t\tthis.byId(\"playerName\").setVisible(!this.byId(\"playerName\").getVisible());\n\t\t\t\tthis.byId(\"objectHeader\").setVisible(!this.byId(\"objectHeader\").getVisible());\n\t\t\t\tthis.byId(\"playerCol\").setVisible(!this.byId(\"playerCol\").getVisible());\n\t\t\t\tthis.byId(\"gameCol\").setVisible(!this.byId(\"gameCol\").getVisible());\n\t\t\t\tvar oList = sap.ui.getCore().byId(\"__component0---master--list\"),\n\t\t\t\t\toBinding = {\n\t\t\t\t\t\tpath : \"/Players\",\n\t\t\t\t\t\tfactory : this.playerListFactory\n\t\t\t\t\t};\n\t\t\t\toList.bindItems(oBinding);\n\t\t\t\tthis._bindView(sObjectPath);*/\n\t\t\t},\n\t\t\t\n\t\t\tonSelectChange : function (oEvent) {\n\t\t\t\tvar oSelect = oEvent.getSource(),\n\t\t\t\t\tsSeason = oSelect.getSelectedItem().getKey(),\n\t\t\t\t\toBinding = this.byId(\"lineItemsList\").getBinding(\"items\"),\n\t\t\t\t\tfnTest = function(value) {\n\t\t\t\t\t    return (value === sSeason); \n\t\t\t\t\t},\n\t\t\t\t\toFilter = new sap.ui.model.Filter(\"Games/season\", \"EQ\", sSeason);\n\t\t\t\tif (sSeason === \"0\"){\n\t\t\t\t\toBinding.filter([]);\n\t\t\t\t}else {\n\t\t\t\t\toBinding.filter([oFilter]);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/* =========================================================== */\n\t\t\t/* begin: internal methods                                     */\n\t\t\t/* =========================================================== */\n\n\n\t\t\t_battingAverage : function (aStats) {\n\t\t\t\treturn this.statFormat1.format(aStats[5] / aStats[0]);\t\n\t\t\t},\n\t\t\t\n\t\t\t_onBasePercentage: function (aStats) {\n\t\t\t\treturn this.statFormat1.format((aStats[5] + aStats[8] + aStats[10]) / (aStats[0] + aStats[8] + aStats[10] + aStats[11]));\n\t\t\t},\n\t\t\t\n\t\t\t_slugging : function (aStats) {\n\t\t\t\treturn this.statFormat2.format((aStats[1] + aStats[2] * 2 + aStats[3] * 3 + aStats[4] * 4) / aStats[0]);\n\t\t\t},\n\t\t\t\n\t\t\t_ops : function (aStats) {\n\t\t\t\tvar a = ((aStats[1] + aStats[2] * 2 + aStats[3] * 3 + aStats[4] * 4) / aStats[0]) + ((aStats[5] + aStats[8] + aStats[10]) / (aStats[0] + aStats[8] + aStats[10] + aStats[11]));\n\t\t\t\treturn this.statFormat2.format(a);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Binds the view to the object path and expands the aggregated line items.\n\t\t\t * @function\n\t\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\n\t\t\t * @private\n\t\t\t */\n\t\t\t_onObjectMatched : function (oEvent) {\n\t\t\t\tthis.byId(\"lineItemsList\").destroyItems();\n\t\t\t\tvar sObjectId =  oEvent.getParameter(\"arguments\").objectId;\n\t\t\t\tthis.getModel().metadataLoaded().then( function() {\n\t\t\t\t\tvar sObjectPath = this.getModel().createKey(\"Players\", {\n\t\t\t\t\t\tPLAYERID :  sObjectId\n\t\t\t\t\t});\n\t\t\t\t\tthis._bindView(\"/\" + sObjectPath);\n\t\t\t\t}.bind(this));\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Binds the view to the object path. Makes sure that detail view displays\n\t\t\t * a busy indicator while data for the corresponding element binding is loaded.\n\t\t\t * @function\n\t\t\t * @param {string} sObjectPath path to the object to be bound to the view.\n\t\t\t * @private\n\t\t\t */\n\t\t\t_bindView : function (sObjectPath) {\n\t\t\t\t// Set busy indicator during view binding\n\t\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\n\t\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\tthis.getView().bindElement({\n\t\t\t\t\tpath : sObjectPath,\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tchange : this._onBindingChange.bind(this),\n\t\t\t\t\t\tdataRequested : function () {\n\t\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdataReceived: function () {\n\t\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t_onBindingChange : function () {\n\t\t\t\tvar oView = this.getView(),\n\t\t\t\t\toElementBinding = oView.getElementBinding();\n\n\t\t\t\t// No data for the binding\n\t\t\t\tif (!oElementBinding.getBoundContext()) {\n\t\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\n\t\t\t\t\t// if object could not be found, the selection in the master list\n\t\t\t\t\t// does not make sense anymore.\n\t\t\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar sPath = oElementBinding.getPath(),\n\t\t\t\t\toResourceBundle = this.getResourceBundle(),\n\t\t\t\t\toObject = oView.getModel().getObject(sPath),\n\t\t\t\t\tsObjectId = oObject.GAMEID,\n\t\t\t\t\tsObjectName = oObject.GAMEID,\n\t\t\t\t\toViewModel = this.getModel(\"detailView\");\n\n\t\t\t\tthis.getOwnerComponent().oListSelector.selectAListItem(sPath);\n\n\t\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\",\n\t\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\n\t\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\",\n\t\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectMessage\", [sObjectName, sObjectId, location.href]));\n\t\t\t},\n\n\t\t\t_onMetadataLoaded : function () {\n\t\t\t\t// Store original busy indicator delay for the detail view\n\t\t\t\tvar iOriginalViewBusyDelay = this.getView().getBusyIndicatorDelay(),\n\t\t\t\t\toViewModel = this.getModel(\"detailView\"),\n\t\t\t\t\toLineItemTable = this.byId(\"lineItemsList\"),\n\t\t\t\t\tiOriginalLineItemTableBusyDelay = oLineItemTable.getBusyIndicatorDelay();\n\n\t\t\t\t// Make sure busy indicator is displayed immediately when\n\t\t\t\t// detail view is displayed for the first time\n\t\t\t\toViewModel.setProperty(\"/delay\", 0);\n\t\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", 0);\n\n\t\t\t\toLineItemTable.attachEventOnce(\"updateFinished\", function() {\n\t\t\t\t\t// Restore original busy indicator delay for line item table\n\t\t\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", iOriginalLineItemTableBusyDelay);\n\t\t\t\t});\n\n\t\t\t\t// Binding the view will set it to not busy - so the view is always busy if it is not bound\n\t\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t\t// Restore original busy indicator delay for the detail view\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalViewBusyDelay);\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"base/stats/controller/Add.controller.js": "/*global location */\nsap.ui.define([\n\t\t\"base/stats/controller/BaseController\",\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"base/stats/model/formatter\",\n\t\t\"sap/ui/core/format/NumberFormat\"\n\t], function (BaseController, JSONModel, formatter, NumberFormat) {\n\t\t\"use strict\";\n\n\t\treturn BaseController.extend(\"base.stats.controller.Add\", {\n\n\t\t\tformatter: formatter,\n\n\t\t\t/* =========================================================== */\n\t\t\t/* lifecycle methods                                           */\n\t\t\t/* =========================================================== */\n\n\t\t\tonInit : function () {\n\t\t\t\t// Model used to manipulate control states. The chosen values make sure,\n\t\t\t\t// detail page is busy indication immediately so there is no break in\n\t\t\t\t// between the busy indication for loading the view's meta data\n\t\t\t\tvar oViewModel = new JSONModel({\n\t\t\t\t\tbusy : false,\n\t\t\t\t\tdelay : 0,\n\t\t\t\t\tlineItemListTitle : this.getResourceBundle().getText(\"detailLineItemTableHeading\")\n\t\t\t\t});\n\n\t\t\t\tthis.getRouter().getRoute(\"add\").attachPatternMatched(this._onObjectMatched, this);\n\n\t\t\t\tthis.setModel(oViewModel, \"detailView\");\n\n\t\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(this._onMetadataLoaded.bind(this));\n\t\t\t\t\n\t\t\t},\n\t\t\t\n\n\t\t\t/* =========================================================== */\n\t\t\t/* event handlers                                              */\n\t\t\t/* =========================================================== */\n\n\t\t\t/**\n\t\t\t * Event handler when the share by E-Mail button has been clicked\n\t\t\t * @public\n\t\t\t */\n\t\t\tonShareEmailPress : function () {\n\t\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\n\t\t\t\tsap.m.URLHelper.triggerEmail(\n\t\t\t\t\tnull,\n\t\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\n\t\t\t\t\toViewModel.getProperty(\"/shareSendEmailMessage\")\n\t\t\t\t);\n\t\t\t},\n\n\n\t\t\t\n\t\t\tonNewChange : function (oEvent) {\n\t\t\t\tvar src = oEvent.getSource(),\n\t\t\t\t\tnewId = src.getSelectedKey(),\n\t\t\t\t\toldId = src.getLastItem().getKey(),\n\t\t\t\t\tnewPanel = this.byId(newId),\n\t\t\t\t\toldPanel = this.byId(oldId);\n\t\t\t\t\toldPanel.setVisible(false);\n\t\t\t\t\tnewPanel.setVisible(true);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler  for navigating back.\n\t\t\t * It there is a history entry we go one step back in the browser history\n\t\t\t * If not, it will replace the current entry of the browser history with the master route.\n\t\t\t * @public\n\t\t\t */\n\t\t\tonNavBack : function() {\n\t\t\t\tvar sPreviousHash = history.getInstance().getPreviousHash();\n\n\t\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\t\thistory.go(-1);\n\t\t\t\t} else {\n\t\t\t\t\tthis.getRouter().navTo(\"master\", {}, true);\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tonSubmit : function(oEvent) {\n\t\t\t\tvar src = oEvent.getSource(),\n\t\t\t\t\tsId = src.getId(),\n\t\t\t\t\tsPath,\n\t\t\t\t\toData = {},\n\t\t\t\t\toModel = this.getModel();\n\t\t\t\tswitch (sId) {\n\t\t\t\t\tcase \"s1\":\n\t\t\t\t\t\tsPath = \"/Stats\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"s2\":\n\t\t\t\t\t\tsPath = \"/Games\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"s3\":\n\t\t\t\t\t\tsPath = \"/Players\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"s4\":\n\t\t\t\t\t\tsPath = \"/Teams\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"s5\":\n\t\t\t\t\t\tsPath = \"/Seasons\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t//oModel.create(sPath, oData);\n\t\t\t},\n\n\t\t\t/* =========================================================== */\n\t\t\t/* begin: internal methods                                     */\n\t\t\t/* =========================================================== */\n\n\n\n\t\t\t/**\n\t\t\t * Binds the view to the object path and expands the aggregated line items.\n\t\t\t * @function\n\t\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\n\t\t\t * @private\n\t\t\t */\n\t\t\t_onObjectMatched : function (oEvent) {\n\t\t\t\t\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Binds the view to the object path. Makes sure that detail view displays\n\t\t\t * a busy indicator while data for the corresponding element binding is loaded.\n\t\t\t * @function\n\t\t\t * @param {string} sObjectPath path to the object to be bound to the view.\n\t\t\t * @private\n\t\t\t */\n\t\t\t_bindView : function (sObjectPath) {\n\t\t\t\t// Set busy indicator during view binding\n\t\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\t\t\t},\n\n\t\t\t_onBindingChange : function () {\n\t\t\t\tvar oView = this.getView(),\n\t\t\t\t\toElementBinding = oView.getElementBinding();\n\t\t\t},\n\n\t\t\t_onMetadataLoaded : function () {\n\t\t\t\t// Store original busy indicator delay for the detail view\n\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"base/stats/localService/mockserver.js": "sap.ui.define([\n\t\t\"sap/ui/core/util/MockServer\"\n\t], function (MockServer) {\n\t\t\"use strict\";\n\n\t\tvar oMockServer,\n\t\t\t_sAppModulePath = \"base/stats/\",\n\t\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\n\n\t\treturn {\n\t\t\t/**\n\t\t\t * Initializes the mock server.\n\t\t\t * You can configure the delay with the URL parameter \"serverDelay\".\n\t\t\t * The local mock data in this folder is returned instead of the real data for testing.\n\t\t\t * @public\n\t\t\t */\n\n\t\t\tinit : function () {\n\t\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\n\t\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\n\t\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\n\t\t\t\t\tsEntity = \"Games\",\n\t\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\n\t\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\n\t\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\n\t\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\n\t\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\n\t\t\t\t\t// ensure there is a trailing slash\n\t\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\n\n\t\t\t\toMockServer = new MockServer({\n\t\t\t\t\trootUri : sMockServerUrl\n\t\t\t\t});\n\n\t\t\t\t// configure mock server with a delay of 1s\n\t\t\t\tMockServer.config({\n\t\t\t\t\tautoRespond : true,\n\t\t\t\t\tautoRespondAfter : (oUriParameters.get(\"serverDelay\") || 1000)\n\t\t\t\t});\n\n\t\t\t\toMockServer.simulate(sMetadataUrl, {\n\t\t\t\t\tsMockdataBaseUrl : sJsonFilesUrl,\n\t\t\t\t\tbGenerateMissingMockData : true\n\t\t\t\t});\n\n\t\t\t\tvar aRequests = oMockServer.getRequests(),\n\t\t\t\t\tfnResponse = function (iErrCode, sMessage, aRequest) {\n\t\t\t\t\t\taRequest.response = function(oXhr){\n\t\t\t\t\t\t\toXhr.respond(iErrCode, {\"Content-Type\": \"text/plain;charset=utf-8\"}, sMessage);\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\n\t\t\t\t// handling the metadata error test\n\t\t\t\tif (oUriParameters.get(\"metadataError\")) {\n\t\t\t\t\taRequests.forEach( function ( aEntry ) {\n\t\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\n\t\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Handling request errors\n\t\t\t\tif (sErrorParam) {\n\t\t\t\t\taRequests.forEach( function ( aEntry ) {\n\t\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\n\t\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\toMockServer.start();\n\n\t\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @public returns the mockserver of the app, should be used in integration tests\n\t\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\n\t\t\t */\n\t\t\tgetMockServer : function () {\n\t\t\t\treturn oMockServer;\n\t\t\t}\n\t\t};\n\n\t}\n);",
		"base/stats/model/formatter.js": "sap.ui.define([\n\t], function () {\n\t\t\"use strict\";\n\n\t\treturn {\n\t\t\t/**\n\t\t\t * Rounds the currency value to 2 digits\n\t\t\t *\n\t\t\t * @public\n\t\t\t * @param {string} sValue value to be formatted\n\t\t\t * @returns {string} formatted currency value with 2 digits\n\t\t\t */\n\t\t\tcurrencyValue : function (sValue) {\n\t\t\t\tif (!sValue) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\n\t\t\t\treturn parseFloat(sValue).toFixed(2);\n\t\t\t}\n\t\t};\n\n\t}\n);",
		"base/stats/model/models.js": "sap.ui.define([\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/ui/Device\"\n\t], function (JSONModel, Device) {\n\t\t\"use strict\";\n\n\t\treturn {\n\t\t\tcreateDeviceModel : function () {\n\t\t\t\tvar oModel = new JSONModel(Device);\n\t\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\t\treturn oModel;\n\t\t\t}\n\t\t};\n\n\t}\n);",
		"base/stats/view/App.view.xml": "<mvc:View\n\t\tcontrollerName=\"base.stats.controller.App\"\n\t\txmlns:mvc=\"sap.ui.core.mvc\"\n\t\tdisplayBlock=\"true\"\n\t\tbusy=\"{appView>/busy}\"\n\t\tbusyIndicatorDelay=\"{appView>/delay}\"\n\t\txmlns=\"sap.m\">\n\t<SplitApp id=\"idAppControl\" />\n</mvc:View>",
		"base/stats/view/Detail.view.xml": "<mvc:View xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\" controllerName=\"base.stats.controller.Detail\">\n\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"{device>/system/phone}\" title=\"{i18n>detailTitle}\" busy=\"{detailView>/busy}\" busyIndicatorDelay=\"{detailView>/delay}\">\n\n\t\t<semantic:content>\n\t\t\t<ObjectHeader id=\"objectHeader\" title=\"{Home/teamname}({hmscore}) - {Away/teamname}({viscore})\">\n\t\t\t\t<attributes>\n\t\t\t\t\t<ObjectAttribute text=\"{Season/name}\"/>\n\t\t\t\t\t<ObjectAttribute text=\"{location} - {path : 'gamedate', type:'sap.ui.model.odata.type.DateTime', formatOptions: {style: 'medium'}}\"/>\n\t\t\t\t</attributes>\n\t\t\t</ObjectHeader>\n\t\t\t<ObjectHeader id=\"playerName\" title=\"{fname} {lname}\" visible=\"false\"/>\n\t\t\t<ScrollContainer>\n\t\t\t<Table id=\"lineItemsList\" width=\"auto\" items=\"{       path: 'Stats',       parameters: {        expand: 'Players,Games'}       }\" updateFinished=\"onListUpdateFinished\" noDataText=\"{i18n>detailLineItemTableNoDataText}\" busyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" class=\"sapUiResponsiveMargin\" itemPress=\"onListItemPress\" updateStarted=\"\">\n\t\t\t\t<headerToolbar>\n\t\t\t\t\t<Toolbar id=\"lineItemsToolbar\">\n\t\t\t\t\t\t<Title id=\"lineItemsHeader\" text=\"{detailView>/lineItemListTitle}\" press=\"onListItemPress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</headerToolbar>\n\t\t\t\t<columns>\n\t\t\t\t\t<Column id=\"gameCol\" width=\"60px\">\n\t\t\t\t\t\t<Text text=\"Game\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\">\n\t\t\t\t\t\t<Text text=\"AB\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\">\n\t\t\t\t\t\t<Text text=\"S\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\">\n\t\t\t\t\t\t<Text text=\"DB\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\">\n\t\t\t\t\t\t<Text text=\"TR\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\">\n\t\t\t\t\t\t<Text text=\"HR\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\">\n\t\t\t\t\t\t<Text text=\"H\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\">\n\t\t\t\t\t\t<Text text=\"R\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\">\n\t\t\t\t\t\t<Text text=\"RBI\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column  width=\"30px\" >\n\t\t\t\t\t\t<Text text=\"W\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\" >\n\t\t\t\t\t\t<Text text=\"K\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\" >\n\t\t\t\t\t\t<Text text=\"HBP\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\" >\n\t\t\t\t\t\t<Text text=\"SAC\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\">\n\t\t\t\t\t\t<Text text=\"SB\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\">\n\t\t\t\t\t\t<Text text=\"AVG\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\" >\n\t\t\t\t\t\t<Text text=\"OBP\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"40px\" >\n\t\t\t\t\t\t<Text text=\"SLG\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"40px\" >\n\t\t\t\t\t\t<Text text=\"OPS\"/>\n\t\t\t\t\t</Column>\t\t\n\t\t\t\t</columns>\n\t\t\t\t<items>\n\t\t\t\t\t<ColumnListItem type=\"Active\">\n\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t<ObjectIdentifier text=\"{Players/fname}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{AB}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{S}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{DB}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{TR}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{HR}\"/>\t\n\t\t\t\t\t\t\t<ObjectNumber number=\"{H}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{R}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{RBI}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{W}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{K}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{HBP}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{SAC}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{SB}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{path: 'AVG', type:'sap.ui.model.odata.type.Double', formatOptions: {maxIntegerDigits: 0, decimals: 3}}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{path: 'OBP', type:'sap.ui.model.odata.type.Double', formatOptions: {maxIntegerDigits: 0, decimals: 3}}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{path: 'SLG', type:'sap.ui.model.odata.type.Double', formatOptions: {decimals: 3}}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{path: 'OPS', type:'sap.ui.model.odata.type.Double', formatOptions: {decimals: 3}}\"/>\n\t\t\t\t\t\t</cells>\n\t\t\t\t\t</ColumnListItem>\n\t\t\t\t</items>\n\t\t\t</Table>\n\t\t\t</ScrollContainer>\n\t\t</semantic:content>\n\n\t\t<semantic:customFooterContent>\n\t\t\t<OverflowToolbarButton icon=\"sap-icon://competitor\" text=\"Leaderboard\" press=\"onLeader\"/>\n\t\t\t<OverflowToolbarButton icon=\"sap-icon://add\" text=\"Leaderboard\" press=\"onAdd\"/>\n\t\t</semantic:customFooterContent>\n\n\t</semantic:DetailPage>\n\n</mvc:View>",
		"base/stats/view/DetailNoObjectsAvailable.view.xml": "<mvc:View\n\t\tcontrollerName=\"base.stats.controller.BaseController\"\n\t\txmlns:mvc=\"sap.ui.core.mvc\"\n\t\txmlns=\"sap.m\">\n\n\t<MessagePage\n\t\t\tid=\"page\"\n\t\t\ttitle=\"{i18n>notAvailableViewTitle}\"\n\t\t\ttext=\"{i18n>noObjectsAvailableText}\"\n\t\t\ticon=\"{sap-icon://product}\"\n\t\t\tdescription=\"\"\n\t\t\tshowNavButton=\"{device>/system/phone}\"\n\t\t\tnavButtonPress=\"onNavBack\">\n\t</MessagePage>\n\n</mvc:View>",
		"base/stats/view/DetailObjectNotFound.view.xml": "<mvc:View\n\t\tcontrollerName=\"base.stats.controller.BaseController\"\n\t\txmlns:mvc=\"sap.ui.core.mvc\"\n\t\txmlns=\"sap.m\">\n\n\t<MessagePage\n\t\t\tid=\"page\"\n\t\t\ttitle=\"{i18n>detailTitle}\"\n\t\t\ttext=\"{i18n>noObjectFoundText}\"\n\t\t\ticon=\"{sap-icon://product}\"\n\t\t\tdescription=\"\"\n\t\t\tshowNavButton=\"{device>/system/phone}\"\n\t\t\tnavButtonPress=\"onNavBack\">\n\t</MessagePage>\n\n</mvc:View>",
		"base/stats/view/Master.view.xml": "<mvc:View\n\t\tcontrollerName=\"base.stats.controller.Master\"\n\t\txmlns:mvc=\"sap.ui.core.mvc\"\n\t\txmlns:core=\"sap.ui.core\"\n\t\txmlns=\"sap.m\"\n\t\txmlns:semantic=\"sap.m.semantic\"\n\t\tid=\"masterView\">\n\n\t<semantic:MasterPage\n\t\t\tid=\"page\"\n\t\t\ttitle=\"{masterView>/title}\"\n\t\t\tnavButtonPress=\"onNavBack\"\n\t\t\tshowNavButton=\"true\">\n\t\t<semantic:subHeader>\n\t\t\t<Bar id=\"headerBar\">\n\t\t\t\t<contentMiddle>\n\t\t\t\t\t<SearchField\n\t\t\t\t\t\t\tid=\"searchField\"\n\t\t\t\t\t\t\tshowRefreshButton=\"{= !${device>/support/touch} }\"\n\t\t\t\t\t\t\ttooltip=\"{i18n>masterSearchTooltip}\"\n\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\tsearch=\"onSearch\">\n\t\t\t\t\t</SearchField>\n\t\t\t\t</contentMiddle>\n\t\t\t</Bar>\n\t\t</semantic:subHeader>\n\n\t\t<semantic:content>\n\t\t\t<PullToRefresh\n\t\t\t\t\tid=\"pullToRefresh\"\n\t\t\t\t\tvisible=\"{device>/support/touch}\"\n\t\t\t\t\trefresh=\"onRefresh\" />\n\t\t\t<!-- For client side filtering add this to the items attribute:  parameters: {operationMode: 'Client'}}\" -->\n\t\t\t<List\n\t\t\t\t\tid=\"list\"\n\t\t\t\t\titems=\"{\n\t\t\t\t\t\tpath: '/Games',\n\t\t\t\t\t\tparameters: {\n\t\t\t\t\t\t\texpand: 'Home,Away,Season'},\n\t\t\t\t\t\tsorter: {\n\t\t\t\t\t\t\tpath: 'gameno',\n\t\t\t\t\t\t\tdescending: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\tgroupHeaderFactory: '.createGroupHeader'\n\t\t\t\t\t}\"\n\t\t\t\t\tbusyIndicatorDelay=\"{masterView>/delay}\"\n\t\t\t\t\tnoDataText=\"{masterView>/noDataText}\"\n\t\t\t\t\tmode=\"{= ${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\"\n\t\t\t\t\tgrowing=\"true\"\n\t\t\t\t\tgrowingScrollToLoad=\"true\"\n\t\t\t\t\tupdateFinished=\"onUpdateFinished\"\n\t\t\t\t\tselectionChange=\"onSelectionChange\">\n\t\t\t\t<infoToolbar>\n\t\t\t\t\t<Toolbar\n\t\t\t\t\t\t\tactive=\"true\"\n\t\t\t\t\t\t\tid=\"filterBar\"\n\t\t\t\t\t\t\tvisible=\"{masterView>/isFilterBarVisible}\"\n\t\t\t\t\t\t\tpress=\"onOpenViewSettings\">\n\t\t\t\t\t\t<Title\n\t\t\t\t\t\t\t\tid=\"filterBarLabel\"\n\t\t\t\t\t\t\t\ttext=\"{masterView>/filterBarLabel}\" />\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</infoToolbar>\n\t\t\t\t<items>\n\t\t\t\t\t<ObjectListItem\n\t\t\t\t\t\t\ttype=\"{= ${device>/system/phone} ? 'Active' : 'Inactive'}\"\n\t\t\t\t\t\t\tpress=\"onSelectionChange\"\n\t\t\t\t\t\t\ttitle=\"Game {gameno}\">\n\t\t\t\t\t\t<attributes>\n\t\t\t\t\t\t\t<ObjectAttribute text =\"{Away/teamalias} vs {Home/teamalias}\"/>\n\t\t\t\t\t\t</attributes>\n\t\t\t\t\t</ObjectListItem>\n\t\t\t\t</items>\n\t\t\t</List>\n\t\t</semantic:content>\n\t\t\n\n\t</semantic:MasterPage>\n\n</mvc:View>",
		"base/stats/view/NotFound.view.xml": "<mvc:View\n\t\tcontrollerName=\"base.stats.controller.BaseController\"\n\t\txmlns:mvc=\"sap.ui.core.mvc\"\n\t\txmlns=\"sap.m\">\n\n\t<MessagePage\n\t\t\tid=\"page\"\n\t\t\ttitle=\"{i18n>notFoundTitle}\"\n\t\t\ttext=\"{i18n>notFoundText}\"\n\t\t\ticon=\"{sap-icon://document}\"\n\t\t\tdescription=\"\"\n\t\t\tshowNavButton=\"{device>/system/phone}\"\n\t\t\tnavButtonPress=\"onNavBack\">\n\t</MessagePage>\n\n</mvc:View>",
		"base/stats/view/ViewSettingsDialog.fragment.xml": "<core:FragmentDefinition\n\t\txmlns=\"sap.m\"\n\t\txmlns:core=\"sap.ui.core\">\n\n\t<ViewSettingsDialog\n\t\t\tid=\"viewSettingsDialog\"\n\t\t\tconfirm=\"onConfirmViewSettingsDialog\"\n\t\t\tresetFilters=\"onViewSettingsDialogResetFilters\">\n\t\t<filterItems>\n\t\t\t<ViewSettingsFilterItem\n\t\t\t\t\tid=\"filterItems\"\n\t\t\t\t\ttext=\"{i18n>masterFilterName}\"\n\t\t\t\t\tkey=\"Price\"\n\t\t\t\t\tmultiSelect=\"false\">\n\t\t\t\t<items>\n\t\t\t\t\t<ViewSettingsItem\n\t\t\t\t\t\t\ttext=\"{i18n>masterFilter1}\"\n\t\t\t\t\t\t\tkey=\"Filter1\"\n\t\t\t\t\t\t\tid=\"viewFilter1\"/>\n\t\t\t\t\t<ViewSettingsItem\n\t\t\t\t\t\t\ttext=\"{i18n>masterFilter2}\"\n\t\t\t\t\t\t\tkey=\"Filter2\"\n\t\t\t\t\t\t\tid=\"viewFilter2\"/>\n\t\t\t\t</items>\n\t\t\t</ViewSettingsFilterItem>\n\t\t</filterItems>\n\t</ViewSettingsDialog>\n\n</core:FragmentDefinition>",
		"base/stats/view/Player.view.xml": "<mvc:View xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\" xmlns:core=\"sap.ui.core\" controllerName=\"base.stats.controller.Player\">\n\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"{device>/system/phone}\" title=\"{i18n>playerTitle}\" busy=\"{detailView>/busy}\" busyIndicatorDelay=\"{detailView>/delay}\">\n\n\t\t<semantic:content>\n\t\t\t<ObjectHeader id=\"playerName\" title=\"{fname} {lname}\"/>\n\t\t\t<Text text=\"Season:\" class=\"sapUiResponsiveMargin\"/>\n\t\t\t<Select id=\"select\" items=\"{/Seasons}\" class=\"sapUiResponsiveMargin\" change=\"onSelectChange\" >\n\t\t\t\t<items>\n\t\t\t\t\t<core:Item key=\"{SID}\" text=\"{name}\"/>\n\t\t\t\t</items>\n\t\t\t</Select>\n\t\t\t<ScrollContainer>\n\t\t\t<Table id=\"lineItemsList\" width=\"auto\" items=\"{       path: 'Stats',       parameters: {        expand: 'Players,Games/Season'}       }\" updateFinished=\"onListUpdateFinished\" noDataText=\"{i18n>detailLineItemTableNoDataText}\" busyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" class=\"sapUiResponsiveMargin\" itemPress=\"onListItemPress\" updateStarted=\"\">\n\t\t\t\t<headerToolbar>\n\t\t\t\t\t<Toolbar id=\"lineItemsToolbar\">\n\t\t\t\t\t\t<Title id=\"lineItemsHeader\" text=\"{detailView>/lineItemListTitle}\" press=\"onListItemPress\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</headerToolbar>\n\t\t\t\t<columns>\n\t\t\t\t\t<Column id=\"gameCol\" width=\"60px\">\n\t\t\t\t\t\t<Text text=\"Game\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\">\n\t\t\t\t\t\t<Text text=\"AB\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\">\n\t\t\t\t\t\t<Text text=\"S\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\">\n\t\t\t\t\t\t<Text text=\"DB\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\">\n\t\t\t\t\t\t<Text text=\"TR\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\">\n\t\t\t\t\t\t<Text text=\"HR\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\">\n\t\t\t\t\t\t<Text text=\"H\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\">\n\t\t\t\t\t\t<Text text=\"R\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\">\n\t\t\t\t\t\t<Text text=\"RBI\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column  width=\"30px\" >\n\t\t\t\t\t\t<Text text=\"W\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\" >\n\t\t\t\t\t\t<Text text=\"K\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\" >\n\t\t\t\t\t\t<Text text=\"HBP\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\" >\n\t\t\t\t\t\t<Text text=\"SAC\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\">\n\t\t\t\t\t\t<Text text=\"SB\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\">\n\t\t\t\t\t\t<Text text=\"AVG\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"30px\" >\n\t\t\t\t\t\t<Text text=\"OBP\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"40px\" >\n\t\t\t\t\t\t<Text text=\"SLG\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"40px\" >\n\t\t\t\t\t\t<Text text=\"OPS\"/>\n\t\t\t\t\t</Column>\t\n\t\t\t\t</columns>\n\t\t\t\t<items>\n\t\t\t\t\t<ColumnListItem type=\"Active\">\n\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t<ObjectIdentifier text=\"{Games/gameno}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{AB}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{S}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{DB}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{TR}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{HR}\"/>\t\n\t\t\t\t\t\t\t<ObjectNumber number=\"{H}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{R}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{RBI}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{W}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{K}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{HBP}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{SAC}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{SB}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{path: 'AVG', type:'sap.ui.model.odata.type.Double', formatOptions: {maxIntegerDigits: 0, decimals: 3}}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{path: 'OBP', type:'sap.ui.model.odata.type.Double', formatOptions: {maxIntegerDigits: 0, decimals: 3}}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{path: 'SLG', type:'sap.ui.model.odata.type.Double', formatOptions: {decimals: 3}}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{path: 'OPS', type:'sap.ui.model.odata.type.Double', formatOptions: {decimals: 3}}\"/>\n\t\t\t\t\t\t</cells>\n\t\t\t\t\t</ColumnListItem>\n\t\t\t\t</items>\n\t\t\t</Table>\n\t\t\t</ScrollContainer>\n\t\t</semantic:content>\n\t\t\n\t\t<semantic:customFooterContent>\n\t\t\t<OverflowToolbarButton icon=\"sap-icon://competitor\" text=\"Leaderboard\" press=\"onLeader\"/>\n\t\t\t<OverflowToolbarButton icon=\"sap-icon://add\" text=\"Leaderboard\" press=\"onAdd\"/>\n\t\t</semantic:customFooterContent>\n\n\t</semantic:DetailPage>\n\n</mvc:View>",
		"base/stats/view/Leader.view.xml": "<mvc:View xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\" xmlns:core=\"sap.ui.core\" controllerName=\"base.stats.controller.Leader\">\n\t<semantic:SemanticPage title=\"Leaders\">\n\t\t<semantic:content>\n\t\t\t<ObjectHeader title=\"Leaderboard\"/>\n\t\t\t<Text text=\"Season\" class = \"sapUiResponsiveMargin\"/>\n\t\t\t<Select id=\"selSeason\" items=\"{/Seasons}\" class = \"sapUiResponsiveMargin\" change=\"onLeaderChange\">\n\t\t\t\t<items>\n\t\t\t\t\t<core:Item key=\"{SID}\" text=\"{name}\"/>\n\t\t\t\t</items>\n\t\t\t</Select>\n\t\t\t<Text text=\"Stat\" class = \"sapUiResponsiveMargin\"/>\n\t\t\t<Select id=\"selStat\" class = \"sapUiResponsiveMargin\" change=\"onLeaderChange\"></Select>\n\t\t\t<List items=\"{\n\t\t\t\t\tpath: '/AllTime',\n\t\t\t\t\tparameters: {\n\t\t\t\t\t\texpand : 'Player'\n\t\t\t\t\t\t},\n\t\t\t\t\tsorter : {\n\t\t\t\t\t\tpath : 'AVG',\n\t\t\t\t\t\tdescending : true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\"\n\t\t\t\twidth=\"auto\"\n\t\t\t\tclass = \"sapUiResponsiveMargin\"\n\t\t\t\tgrowing=\"true\"\n\t\t\t\tgrowingThreshold=\"5\"\n\t\t\t\tupdateFinished=\"onListUpdateFinished\" \n\t\t\t\tid=\"leaders\">\n\t\t\t\t\t<items>\n\t\t\t\t\t\t<ObjectListItem title=\"{Player/fname}\" number=\"{AVG}\"/>\n\t\t\t\t\t</items>\n\t\t\t\t</List>\n\t\t</semantic:content>\n\t</semantic:SemanticPage>\n\t\n</mvc:View>",
		"base/stats/view/Add.view.xml": "<mvc:View xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\" xmlns:sfm=\"sap.ui.comp.smartform\" xmlns:sfd=\"sap.ui.comp.smartfield\" xmlns:core=\"sap.ui.core\" controllerName=\"base.stats.controller.Add\">\n\t<semantic:SemanticPage title=\"Add\">\n\t\t<semantic:content>\n\t\t\t<Select change=\"onNewChange\">\n\t\t\t\t<core:Item key=\"n1\" text=\"New Stat\"/>\n\t\t\t\t<core:Item key=\"n2\" text=\"New Game\"/>\n\t\t\t\t<core:Item key=\"n3\" text=\"New Player\"/>\n\t\t\t\t<core:Item key=\"n4\" text=\"New Team\"/>\n\t\t\t\t<core:Item key=\"n5\" text=\"New Season\"/>\n\t\t\t</Select>\n\t\t\t<Panel headerText=\"New Season\" id=\"n5\" visible=\"false\">\n\t\t\t\t<VBox>\n\t\t\t\t\t<Input placeholder=\"Season Name...\" width=\"33%\"/>\n\t\t\t\t\t<Button text=\"Submit\" id=\"s5\" class=\"sapUiContentPadding\" press=\"onSubmit\"/>\n\t\t\t\t</VBox>\n\t\t\t</Panel>\n\t\t\t<Panel headerText=\"New Team\" id=\"n4\" visible=\"false\">\n\t\t\t\t<VBox>\n\t\t\t\t\t<Input placeholder=\"Team Name...\" width=\"33%\"/>\n\t\t\t\t\t<Input placeholder=\"Team Alias...\" width=\"33%\"/>\n\t\t\t\t\t<Button text=\"Submit\" id=\"s4\" class=\"sapUiContentPadding\" press=\"onSubmit\"/>\n\t\t\t\t</VBox>\n\t\t\t</Panel>\n\t\t\t<Panel headerText=\"New Game\" id=\"n2\" visible=\"false\">\n\t\t\t\t<VBox>\n\t\t\t\t\t<Label text=\"Season\"/>\n\t\t\t\t\t<Select items=\"{/Seasons}\">\n\t\t\t\t\t\t<core:Item key=\"{SID}\" text=\"{name}\"/>\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Input placeholder=\"Division...\" width=\"33%\"/>\n\t\t\t\t\t<Input placeholder=\"Field...\" width=\"33%\"/>\n\t\t\t\t\t<Input placeholder=\"Game Number...\" width=\"33%\"/>\n\t\t\t\t\t<DateTimePicker placeholder=\"Game Date/Time...\" width=\"33%\"/>\n\t\t\t\t\t<Input placeholder=\"Location...\" width=\"33%\"/>\n\t\t\t\t\t<Label text=\"Home Team\"/>\n\t\t\t\t\t<Select items=\"{/Teams}\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<core:Item key=\"{TEAMID}\" text=\"{teamname}\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Input placeholder=\"Score...\" width=\"33%\"/>\n\t\t\t\t\t<Label text=\"Away Team\"/>\n\t\t\t\t\t<Select items=\"{/Teams}\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<core:Item key=\"{TEAMID}\" text=\"{teamname}\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Input placeholder=\"Score...\" width=\"33%\"/>\n\t\t\t\t\t<TextArea placeholder=\"Coments...\" rows=\"4\"/>\n\t\t\t\t\t<Button text=\"Submit\" id=\"s2\" class=\"sapUiContentPadding\" press=\"onSubmit\"/>\n\t\t\t\t</VBox>\n\t\t\t</Panel>\n\t\t\t<Panel headerText=\"New Player\" id=\"n3\" visible=\"false\">\n\t\t\t\t<VBox>\n\t\t\t\t\t<Input placeholder=\"First Name...\" width=\"33%\"/>\n\t\t\t\t\t<Input placeholder=\"Last Name...\" width=\"33%\"/>\n\t\t\t\t\t<Input placeholder=\"Email...\" width=\"33%\"/>\n\t\t\t\t\t<Input placeholder=\"Phone Number...\" width=\"33%\"/>\n\t\t\t\t\t<Button text=\"Submit\" id=\"s3\" class=\"sapUiContentPadding\" press=\"onSubmit\"/>\n\t\t\t\t</VBox>\n\t\t\t</Panel>\n\t\t\t<Panel headerText=\"New Stat\" id=\"n1\">\n\t\t\t\t<VBox>\n\t\t\t\t\t<Label text=\"Game\"/>\n\t\t\t\t\t<Select items=\"{path: '/Games', parameters: {expand: 'Season'}}\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<core:Item key=\"{GAMEID}\" text=\"{Season/name}: Game {gameno}\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Label text=\"Player\"/>\n\t\t\t\t\t<Select items=\"{/Players}\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<core:Item key=\"{PLAYERID}\" text=\"{fname} {lname}\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Input placeholder=\"At Bats...\" width=\"33%\"/>\n\t\t\t\t\t<Input placeholder=\"Singles...\" width=\"33%\"/>\n\t\t\t\t\t<Input placeholder=\"Doubles...\" width=\"33%\"/>\n\t\t\t\t\t<Input placeholder=\"Triples...\" width=\"33%\"/>\n\t\t\t\t\t<Input placeholder=\"Home Runs...\" width=\"33%\"/>\n\t\t\t\t\t<Input placeholder=\"Runs...\" width=\"33%\"/>\n\t\t\t\t\t<Input placeholder=\"RBI's...\" width=\"33%\"/>\n\t\t\t\t\t<Input placeholder=\"Walks...\" width=\"33%\"/>\n\t\t\t\t\t<Input placeholder=\"Strikeouts...\" width=\"33%\"/>\n\t\t\t\t\t<Input placeholder=\"Hit By Pitch...\" width=\"33%\"/>\n\t\t\t\t\t<Input placeholder=\"Sacrifice Fly's...\" width=\"33%\"/>\n\t\t\t\t\t<Input placeholder=\"Stolen Bases...\" width=\"33%\"/>\n\t\t\t\t\t<Button text=\"Submit\" id=\"s1\" class=\"sapUiContentPadding\" press=\"onSubmit\"/>\n\t\t\t\t</VBox>\n\t\t\t</Panel>\n\t\t</semantic:content>\n\t</semantic:SemanticPage>\n\t\n</mvc:View>",
		"base/stats/Component.js": "sap.ui.define([\n\t\t\"sap/ui/core/UIComponent\",\n\t\t\"sap/ui/Device\",\n\t\t\"base/stats/model/models\",\n\t\t\"base/stats/controller/ListSelector\",\n\t\t\"base/stats/controller/ErrorHandler\"\n\t], function (UIComponent, Device, models, ListSelector, ErrorHandler) {\n\t\t\"use strict\";\n\n\t\treturn UIComponent.extend(\"base.stats.Component\", {\n\n\t\t\tmetadata : {\n\t\t\t\tmanifest : \"json\"\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t\t * In this method, the device models are set and the router is initialized.\n\t\t\t * @public\n\t\t\t * @override\n\t\t\t */\n\t\t\tinit : function () {\n\t\t\t\tthis.oListSelector = new ListSelector();\n\t\t\t\tthis._oErrorHandler = new ErrorHandler(this);\n\n\t\t\t\t// set the device model\n\t\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\n\t\t\t\t// call the base component's init function and create the App view\n\t\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\t\t// create the views based on the url/hash\n\t\t\t\tthis.getRouter().initialize();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The component is destroyed by UI5 automatically.\n\t\t\t * In this method, the ListSelector and ErrorHandler are destroyed.\n\t\t\t * @public\n\t\t\t * @override\n\t\t\t */\n\t\t\tdestroy : function () {\n\t\t\t\tthis.oListSelector.destroy();\n\t\t\t\tthis._oErrorHandler.destroy();\n\t\t\t\t// call the base component's destroy function\n\t\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t\t\t * design mode class should be set, which influences the size appearance of some controls.\n\t\t\t * @public\n\t\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t\t\t */\n\t\t\tgetContentDensityClass : function() {\n\t\t\t\tif (this._sContentDensityClass === undefined) {\n\t\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\n\t\t\t\t\t\tthis._sContentDensityClass = \"\";\n\t\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\n\t\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this._sContentDensityClass;\n\t\t\t}\n\n\t\t});\n\n\t}\n);"
	}
});